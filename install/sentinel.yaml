apiVersion: v1
kind: Template
metadata:
  name:  sentinel-template
  annotations:
    description: "Deploys the Sentinel process."
parameters:
  - name: CURRENT_NAMESPACE
    value: sentinel
    displayName: Deployment Project
    description: The name of the project where the Sentinel is deployed
    required: true
  - name: PLATFORM_ID
    value: KUBE-01
    displayName: Platform Identifier
    description: The identifier of the platform Sentinel is deployed on
    required: true
  - name: LOG_LEVEL
    value: Info
    displayName: Log Level
    description: The level of login used by Sentinel - i.e. Trace, Debug, Info, Warn, Error, Fatal, Panic
    required: true
  - name: PUBLISHER
    value: logger
    displayName: Publisher
    description: The publisher used by Sentinel to send event information - i.e. logger, webhook, broker
    required: true
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: sentinel
      namespace: "${CURRENT_NAMESPACE}"
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: sentinel-watcher
    rules:
      - apiGroups: ["*"] # all api groups
        resources: [
          "pods",
          "secrets",
          "configmaps",
          "services",
          "deployments",
          "namespaces",
          "persistentvolumes",
          "persistentvolumeclaims",
          "replicasets",
          "serviceaccounts",
          "clusterroles",
          "jobs",
          "ingresses",
          "daemonsets",
          "replicationcontrollers",
          "resourcequotas"
        ]
        verbs: ["get", "watch", "list"]
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: sentinel
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: sentinel-watcher
    subjects:
      - kind: ServiceAccount
        name: sentinel
        namespace: "${CURRENT_NAMESPACE}"
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: sentinel
    spec:
      replicas: 1
      progressDeadlineSeconds: 600
      revisionHistoryLimit: 10
      selector:
        deploymentconfig: sentinel
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: sentinel
            deploymentconfig: sentinel
        spec:
          containers:
            - name: sentinel
              env:
                - name: SL_PLATFORM
                  value: "${PLATFORM_ID}"
                - name: SL_LOGINLEVEL
                  value: "${LOG_LEVEL}"
                - name: SL_PUBLISHERS_PUBLISHER
                  value: "${PUBLISHER}"
                - name: SL_PUBLISHERS_LOGGER_OUTPUTTO
                  value: stdout
                - name: SL_PUBLISHERS_WEBHOOK_1_URI
                  value: oxkube:8000/webhook
                - name: SL_PUBLISHERS_WEBHOOK_1_AUTHENTICATION
                  value: basic
                - name: SL_PUBLISHERS_WEBHOOK_1_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: webhook-secret
                      key: username
                - name: SL_PUBLISHERS_WEBHOOK_1_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: webhook-secret
                      key: password
                - name: SL_OBSERVE_NAMESPACE
                  value: 'true'
                - name: SL_OBSERVE_SERVICE
                  value: 'true'
                - name: SL_OBSERVE_PERSISTENTVOLUMECLAIM
                  value: 'true'
                - name: SL_OBSERVE_REPLICATIONCONTROLLER
                  value: 'true'
                - name: SL_OBSERVE_RESOURCEQUOTA
                  value: 'true'
              imagePullPolicy: IfNotPresent
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccountName: sentinel
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - sentinel
            from:
              kind: ImageStreamTag
              name: sentinel:latest
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
      labels:
        app: sentinel
      name: sentinel
    spec:
      lookupPolicy:
        local: true
      tags:
        - annotations:
          from:
            kind: DockerImage
            name: gatblau/sentinel-snapshot
          importPolicy:
            scheduled: true
          name: latest
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: Secret
    metadata:
      name: webhook-secret
    type: Opaque
    data:
      username: YWRtaW4=
      password: a3ViMw==